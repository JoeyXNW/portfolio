{"ast":null,"code":"export const validate = element => {\n  let valid = element.value.trim() !== \"\";\n  let message = `${!valid ? \"This field is required\" : \"\"}`;\n\n  if (valid && element.config.name === \"email\") {\n    valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n    message = `${!valid ? \"Must be a valid email\" : \"\"}`;\n  }\n\n  return [valid, message];\n};\nexport const isFormValid = formData => {\n  for (let key in formData) {\n    if (!formData[key].valid) return false;\n  }\n\n  return true;\n};\nexport const update = (element, state) => {\n  console.log(state);\n  const newState = { ...state\n  };\n  const newFormData = newState.formData;\n  const newElement = newFormData[element.id];\n  newElement.value = element.event.target.value;\n\n  if (element.blur) {\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n    newState.formSuccess = isFormValid(newFormData);\n  }\n\n  return newState;\n};","map":{"version":3,"sources":["/Users/Ning/Desktop/portfolio/src/components/utils/misc.js"],"names":["validate","element","valid","value","trim","message","config","name","test","isFormValid","formData","key","update","state","console","log","newState","newFormData","newElement","id","event","target","blur","validData","validationMessage","formSuccess"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGC,OAAO,IAAI;AACjC,MAAIC,KAAK,GAAGD,OAAO,CAACE,KAAR,CAAcC,IAAd,OAAyB,EAArC;AACA,MAAIC,OAAO,GAAI,GAAE,CAACH,KAAD,GAAS,wBAAT,GAAoC,EAAG,EAAxD;;AAEA,MAAIA,KAAK,IAAID,OAAO,CAACK,MAAR,CAAeC,IAAf,KAAwB,OAArC,EAA8C;AAC5CL,IAAAA,KAAK,GAAG,eAAeM,IAAf,CAAoBP,OAAO,CAACE,KAA5B,CAAR;AACAE,IAAAA,OAAO,GAAI,GAAE,CAACH,KAAD,GAAS,uBAAT,GAAmC,EAAG,EAAnD;AACD;;AAED,SAAO,CAACA,KAAD,EAAQG,OAAR,CAAP;AACD,CAVM;AAYP,OAAO,MAAMI,WAAW,GAAGC,QAAQ,IAAI;AACrC,OAAK,IAAIC,GAAT,IAAgBD,QAAhB,EAA0B;AACxB,QAAI,CAACA,QAAQ,CAACC,GAAD,CAAR,CAAcT,KAAnB,EAA0B,OAAO,KAAP;AAC3B;;AACD,SAAO,IAAP;AACD,CALM;AAOP,OAAO,MAAMU,MAAM,GAAG,CAACX,OAAD,EAAUY,KAAV,KAAoB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,QAAQ,GAAG,EAAE,GAAGH;AAAL,GAAjB;AACA,QAAMI,WAAW,GAAGD,QAAQ,CAACN,QAA7B;AACA,QAAMQ,UAAU,GAAGD,WAAW,CAAChB,OAAO,CAACkB,EAAT,CAA9B;AACAD,EAAAA,UAAU,CAACf,KAAX,GAAmBF,OAAO,CAACmB,KAAR,CAAcC,MAAd,CAAqBlB,KAAxC;;AAEA,MAAIF,OAAO,CAACqB,IAAZ,EAAkB;AAChB,QAAIC,SAAS,GAAGvB,QAAQ,CAACkB,UAAD,CAAxB;AACAA,IAAAA,UAAU,CAAChB,KAAX,GAAmBqB,SAAS,CAAC,CAAD,CAA5B;AACAL,IAAAA,UAAU,CAACM,iBAAX,GAA+BD,SAAS,CAAC,CAAD,CAAxC;AAEAP,IAAAA,QAAQ,CAACS,WAAT,GAAuBhB,WAAW,CAACQ,WAAD,CAAlC;AACD;;AAED,SAAOD,QAAP;AACD,CAhBM","sourcesContent":["export const validate = element => {\n  let valid = element.value.trim() !== \"\";\n  let message = `${!valid ? \"This field is required\" : \"\"}`;\n\n  if (valid && element.config.name === \"email\") {\n    valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n    message = `${!valid ? \"Must be a valid email\" : \"\"}`;\n  }\n\n  return [valid, message];\n};\n\nexport const isFormValid = formData => {\n  for (let key in formData) {\n    if (!formData[key].valid) return false;\n  }\n  return true;\n};\n\nexport const update = (element, state) => {\n  console.log(state);\n  const newState = { ...state };\n  const newFormData = newState.formData;\n  const newElement = newFormData[element.id];\n  newElement.value = element.event.target.value;\n\n  if (element.blur) {\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n\n    newState.formSuccess = isFormValid(newFormData);\n  }\n\n  return newState;\n};\n"]},"metadata":{},"sourceType":"module"}