{"ast":null,"code":"export const validate = element => {\n  let valid = element.value.trim() !== \"\";\n  let message = `${!valid ? \"This field is required\" : \"\"}`;\n\n  if (valid && element.config.name === \"email\") {\n    valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n    message = `${!valid ? \"Must be a valid email\" : \"\"}`;\n  }\n\n  return [valid, message];\n};\nexport const update = (element, formData) => {\n  const newFormData = { ...formData\n  };\n  const newElement = newFormData[element.id];\n  newElement.value = element.event.target.value;\n\n  if (element.blur) {\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n  }\n\n  return newFormData;\n};","map":{"version":3,"sources":["/Users/Ning/Desktop/portfolio/src/components/utils/misc.js"],"names":["validate","element","valid","value","trim","message","config","name","test","update","formData","newFormData","newElement","id","event","target","blur","validData","validationMessage"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGC,OAAO,IAAI;AACjC,MAAIC,KAAK,GAAGD,OAAO,CAACE,KAAR,CAAcC,IAAd,OAAyB,EAArC;AACA,MAAIC,OAAO,GAAI,GAAE,CAACH,KAAD,GAAS,wBAAT,GAAoC,EAAG,EAAxD;;AAEA,MAAIA,KAAK,IAAID,OAAO,CAACK,MAAR,CAAeC,IAAf,KAAwB,OAArC,EAA8C;AAC5CL,IAAAA,KAAK,GAAG,eAAeM,IAAf,CAAoBP,OAAO,CAACE,KAA5B,CAAR;AACAE,IAAAA,OAAO,GAAI,GAAE,CAACH,KAAD,GAAS,uBAAT,GAAmC,EAAG,EAAnD;AACD;;AAED,SAAO,CAACA,KAAD,EAAQG,OAAR,CAAP;AACD,CAVM;AAYP,OAAO,MAAMI,MAAM,GAAG,CAACR,OAAD,EAAUS,QAAV,KAAuB;AAC3C,QAAMC,WAAW,GAAG,EAAE,GAAGD;AAAL,GAApB;AACA,QAAME,UAAU,GAAGD,WAAW,CAACV,OAAO,CAACY,EAAT,CAA9B;AACAD,EAAAA,UAAU,CAACT,KAAX,GAAmBF,OAAO,CAACa,KAAR,CAAcC,MAAd,CAAqBZ,KAAxC;;AAEA,MAAIF,OAAO,CAACe,IAAZ,EAAkB;AAChB,QAAIC,SAAS,GAAGjB,QAAQ,CAACY,UAAD,CAAxB;AACAA,IAAAA,UAAU,CAACV,KAAX,GAAmBe,SAAS,CAAC,CAAD,CAA5B;AACAL,IAAAA,UAAU,CAACM,iBAAX,GAA+BD,SAAS,CAAC,CAAD,CAAxC;AACD;;AAED,SAAON,WAAP;AACD,CAZM","sourcesContent":["export const validate = element => {\n  let valid = element.value.trim() !== \"\";\n  let message = `${!valid ? \"This field is required\" : \"\"}`;\n\n  if (valid && element.config.name === \"email\") {\n    valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n    message = `${!valid ? \"Must be a valid email\" : \"\"}`;\n  }\n\n  return [valid, message];\n};\n\nexport const update = (element, formData) => {\n  const newFormData = { ...formData };\n  const newElement = newFormData[element.id];\n  newElement.value = element.event.target.value;\n\n  if (element.blur) {\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n  }\n\n  return newFormData;\n};\n"]},"metadata":{},"sourceType":"module"}