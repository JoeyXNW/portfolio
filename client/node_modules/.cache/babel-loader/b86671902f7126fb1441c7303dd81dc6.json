{"ast":null,"code":"var _jsxFileName = \"/Users/Ning/Desktop/portfolio/src/components/utils/formField/index.js\";\nimport React from \"react\";\nimport \"./formField.css\";\n\nconst FormField = ({\n  formData,\n  change\n}) => {\n  const showError = () => {\n    let errMessage = \"\";\n    if (!formData.valid) errMessage = React.createElement(\"div\", {\n      className: \"error_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, formData.validationMessage);\n    return errMessage;\n  };\n\n  const id = formData.config.name;\n\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch (formData.element) {\n      case \"input\":\n        formTemplate = React.createElement(\"input\", Object.assign({}, formData.config, {\n          value: formData.value,\n          onBlur: event => change({\n            event,\n            id,\n            blur: true\n          }),\n          onChange: event => change({\n            event,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n        break;\n\n      case \"textarea\":\n        formTemplate = React.createElement(\"textarea\", Object.assign({}, formData.config, {\n          value: formData.value,\n          onBlur: event => change({\n            event,\n            id,\n            blur: true\n          }),\n          onChange: event => change({\n            event,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n        break;\n\n      default:\n        formTemplate = null;\n    }\n\n    return formTemplate;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"formBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, formData.showLabel && React.createElement(\"div\", {\n    className: \"label_inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, formData.config.label), React.createElement(\"input\", Object.assign({}, formData.config, {\n    value: formData.value,\n    onBlur: event => change({\n      event,\n      id: {\n        id\n      },\n      blur: true\n    }),\n    onChange: event => change({\n      event,\n      id: {\n        id\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), showError());\n};\n\nexport default FormField;","map":{"version":3,"sources":["/Users/Ning/Desktop/portfolio/src/components/utils/formField/index.js"],"names":["React","FormField","formData","change","showError","errMessage","valid","validationMessage","id","config","name","renderTemplate","formTemplate","element","value","event","blur","showLabel","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AAC1C,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIC,UAAU,GAAG,EAAjB;AAEA,QAAI,CAACH,QAAQ,CAACI,KAAd,EACED,UAAU,GACR;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BH,QAAQ,CAACK,iBAAvC,CADF;AAGF,WAAOF,UAAP;AACD,GARD;;AAUA,QAAMG,EAAE,GAAGN,QAAQ,CAACO,MAAT,CAAgBC,IAA3B;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,YAAY,GAAG,IAAnB;;AACA,YAAQV,QAAQ,CAACW,OAAjB;AACE,WAAK,OAAL;AACED,QAAAA,YAAY,GACV,+CACMV,QAAQ,CAACO,MADf;AAEE,UAAA,KAAK,EAAEP,QAAQ,CAACY,KAFlB;AAGE,UAAA,MAAM,EAAEC,KAAK,IAAIZ,MAAM,CAAC;AAAEY,YAAAA,KAAF;AAASP,YAAAA,EAAT;AAAaQ,YAAAA,IAAI,EAAE;AAAnB,WAAD,CAHzB;AAIE,UAAA,QAAQ,EAAED,KAAK,IAAIZ,MAAM,CAAC;AAAEY,YAAAA,KAAF;AAASP,YAAAA;AAAT,WAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQA;;AACF,WAAK,UAAL;AACEI,QAAAA,YAAY,GACV,kDACMV,QAAQ,CAACO,MADf;AAEE,UAAA,KAAK,EAAEP,QAAQ,CAACY,KAFlB;AAGE,UAAA,MAAM,EAAEC,KAAK,IAAIZ,MAAM,CAAC;AAAEY,YAAAA,KAAF;AAASP,YAAAA,EAAT;AAAaQ,YAAAA,IAAI,EAAE;AAAnB,WAAD,CAHzB;AAIE,UAAA,QAAQ,EAAED,KAAK,IAAIZ,MAAM,CAAC;AAAEY,YAAAA,KAAF;AAASP,YAAAA;AAAT,WAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQA;;AACF;AACEI,QAAAA,YAAY,GAAG,IAAf;AAtBJ;;AAwBA,WAAOA,YAAP;AACD,GA3BD;;AA6BA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QAAQ,CAACe,SAAT,IACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bf,QAAQ,CAACO,MAAT,CAAgBS,KAA/C,CAFJ,EAIE,+CACMhB,QAAQ,CAACO,MADf;AAEE,IAAA,KAAK,EAAEP,QAAQ,CAACY,KAFlB;AAGE,IAAA,MAAM,EAAEC,KAAK,IAAIZ,MAAM,CAAC;AAAEY,MAAAA,KAAF;AAASP,MAAAA,EAAE,EAAE;AAAEA,QAAAA;AAAF,OAAb;AAAqBQ,MAAAA,IAAI,EAAE;AAA3B,KAAD,CAHzB;AAIE,IAAA,QAAQ,EAAED,KAAK,IAAIZ,MAAM,CAAC;AAAEY,MAAAA,KAAF;AAASP,MAAAA,EAAE,EAAE;AAAEA,QAAAA;AAAF;AAAb,KAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,EAUGJ,SAAS,EAVZ,CADF;AAcD,CAxDD;;AA0DA,eAAeH,SAAf","sourcesContent":["import React from \"react\";\nimport \"./formField.css\";\n\nconst FormField = ({ formData, change }) => {\n  const showError = () => {\n    let errMessage = \"\";\n\n    if (!formData.valid)\n      errMessage = (\n        <div className=\"error_label\">{formData.validationMessage}</div>\n      );\n    return errMessage;\n  };\n\n  const id = formData.config.name;\n\n  const renderTemplate = () => {\n    let formTemplate = null;\n    switch (formData.element) {\n      case \"input\":\n        formTemplate = (\n          <input\n            {...formData.config}\n            value={formData.value}\n            onBlur={event => change({ event, id, blur: true })}\n            onChange={event => change({ event, id })}\n          />\n        );\n        break;\n      case \"textarea\":\n        formTemplate = (\n          <textarea\n            {...formData.config}\n            value={formData.value}\n            onBlur={event => change({ event, id, blur: true })}\n            onChange={event => change({ event, id })}\n          />\n        );\n        break;\n      default:\n        formTemplate = null;\n    }\n    return formTemplate;\n  };\n\n  return (\n    <div className=\"formBlock\">\n      {formData.showLabel && (\n        <div className=\"label_inputs\">{formData.config.label}</div>\n      )}\n      <input\n        {...formData.config}\n        value={formData.value}\n        onBlur={event => change({ event, id: { id }, blur: true })}\n        onChange={event => change({ event, id: { id } })}\n      />\n      {showError()}\n    </div>\n  );\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}