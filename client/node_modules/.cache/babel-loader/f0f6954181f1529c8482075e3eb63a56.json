{"ast":null,"code":"var _jsxFileName = \"/Users/Ning/Desktop/portfolio/src/components/contactForm/index.js\";\nimport React, { Component } from \"react\";\nimport \"./contactForm.css\";\nimport FormField from \"../utils/formField\";\nimport { update, generateData } from \"../utils/misc\";\nconst initialState = {\n  // formError: null,\n  formSuccess: false,\n  formData: {\n    name: {\n      element: \"input\",\n      value: \"\",\n      config: {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    },\n    email: {\n      element: \"input\",\n      value: \"\",\n      config: {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    },\n    subject: {\n      element: \"input\",\n      value: \"\",\n      config: {\n        name: \"subject\",\n        type: \"text\",\n        placeholder: \"Subject\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    },\n    message: {\n      element: \"textarea\",\n      value: \"\",\n      config: {\n        name: \"message\",\n        type: \"text\",\n        placeholder: \"Message\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    }\n  }\n};\n\nclass ContactFrom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData);\n      console.log(dataToSubmit);\n    };\n\n    this.updateForm = element => {\n      const newState = update(element, this.state);\n      this.setState(newState);\n    };\n\n    this.showFormField = () => {\n      const {\n        formData\n      } = this.state;\n      return Object.keys(formData).map(key => React.createElement(FormField, {\n        key: key,\n        id: key,\n        formData: formData[key],\n        change: this.updateForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contact_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.showFormField(), React.createElement(\"div\", {\n      className: `button ${!this.state.formSuccess ? \"disable_button\" : \"\"}`,\n      onClick: event => this.submitForm(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ContactFrom;","map":{"version":3,"sources":["/Users/Ning/Desktop/portfolio/src/components/contactForm/index.js"],"names":["React","Component","FormField","update","generateData","initialState","formSuccess","formData","name","element","value","config","type","placeholder","valid","validationMessage","email","subject","message","ContactFrom","state","submitForm","event","preventDefault","dataToSubmit","console","log","updateForm","newState","setState","showFormField","Object","keys","map","key","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./contactForm.css\";\nimport FormField from \"../utils/formField\";\nimport { update, generateData } from \"../utils/misc\";\n\nconst initialState = {\n  // formError: null,\n  formSuccess: false,\n  formData: {\n    name: {\n      element: \"input\",\n      value: \"\",\n      config: {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    },\n\n    email: {\n      element: \"input\",\n      value: \"\",\n      config: {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    },\n\n    subject: {\n      element: \"input\",\n      value: \"\",\n      config: {\n        name: \"subject\",\n        type: \"text\",\n        placeholder: \"Subject\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    },\n\n    message: {\n      element: \"textarea\",\n      value: \"\",\n      config: {\n        name: \"message\",\n        type: \"text\",\n        placeholder: \"Message\"\n      },\n      valid: false,\n      // touched: false,\n      validationMessage: \"\"\n    }\n  }\n};\n\nclass ContactFrom extends Component {\n  state = initialState;\n\n  submitForm = event => {\n    event.preventDefault();\n\n    let dataToSubmit = generateData(this.state.formData);\n    console.log(dataToSubmit);\n  };\n\n  updateForm = element => {\n    const newState = update(element, this.state);\n    this.setState(newState);\n  };\n\n  showFormField = () => {\n    const { formData } = this.state;\n    return Object.keys(formData).map(key => (\n      <FormField\n        key={key}\n        id={key}\n        formData={formData[key]}\n        change={this.updateForm}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"contact_form\">\n        <div className=\"form\">\n          <form>\n            {this.showFormField()}\n            <div\n              className={`button ${\n                !this.state.formSuccess ? \"disable_button\" : \"\"\n              }`}\n              onClick={event => this.submitForm(event)}\n            >\n              Submit\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactFrom;\n"]},"metadata":{},"sourceType":"module"}